---
##  Configure backuppc mysql user with SELECT privileges on all bases
##  backuppc user access is configured without explicit password provision

## This should be the right module to use in the next tasl, but it doesn't work.
# - name: Chek if mysqld is present
#  package_facts:
#    manager: "apt"

- name: SERVICE | Check if Mysql service is present and running
  service:
    name: mysqld
    state: started
  ignore_errors: yes
  register: mysql_state

- name: FAIL | stop playbook if mysqld absent
  fail:
    msg: There is no mysqld running in the host to backup
  when: mysql_state.failed

- name: APT | Install MySQL-Python module
  apt:
    name: "{{ 'python-mysqldb' if ( ansible_distribution == 'Debian' and ansible_distribution_major_version | int < 11 ) else 'python3-mysqldb' }}"
    state: present

- name: MYSQL_USER | Set backuppc mysql user privileges
  mysql_user:
    login_user: "{{ 'root' if backuppc_db_server_root_pass is defined else omit }}"
    login_password: "{{ backuppc_db_server_root_pass | default( omit ) }}"
    user: "{{ backuppc_db_dump_user }}"
    password: "{{ backuppc_db_dump_user_pass }}"
    state: present
    priv: '*.*:PROCESS,SUPER,SELECT'  
    config_file: "{{ omit if backuppc_db_server_root_pass is defined else backuppc_mysql_credentials_file[(ansible_os_family|lower)] | default(omit) }}"


- name: TEMPLATE | Add access to mysql
  template:
    src: etc/mysql/.my.cnf.j2
    dest: "{{ backuppc_client_home }}/.my.cnf"
    owner: "{{ backuppc_client_user }}"
    group: "{{ backuppc_client_group }}"
    mode: 0644

...
